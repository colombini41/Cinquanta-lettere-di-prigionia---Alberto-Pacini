<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet 
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"  
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:req="http://www.armatiek.com/xslweb/request"
  xmlns:resp="http://www.armatiek.com/xslweb/response" 
  xmlns:config="http://www.armatiek.com/xslweb/configuration"
  xmlns:file="http://expath.org/ns/file"
  exclude-result-prefixes="#all"
  expand-text="yes"
  version="3.0">
  
  <xsl:param name="config:webapp-dir"/>
  
  <xsl:output method="html" indent="yes" omit-xml-declaration="yes"/>
  
  <xsl:mode name="html" on-no-match="shallow-copy"/>
  
  <xsl:template match="/">
    <resp:response status="200">
      <resp:headers>
        <resp:header name="Content-Type">text/html</resp:header>
      </resp:headers>
      <resp:body>
        <xsl:call-template name="page"/>
      </resp:body>
    </resp:response>          
  </xsl:template>
  
  <xsl:template name="page">
    <xsl:variable name="path" as="xs:string" select="/req:request/req:path"/>
    <xsl:apply-templates select="doc('workshop' || $path)" mode="html">
      <xsl:with-param name="path" as="xs:string" select="$path" tunnel="yes"/>
    </xsl:apply-templates>
  </xsl:template>
  
  <xsl:template match="body" mode="html">
    <xsl:param name="path" as="xs:string" required="yes" tunnel="yes"/>
    <xsl:variable name="local-base-filename" as="xs:string" select="replace($path, '^.*/([^/]+)\.html$', '$1')"/>
    
    <xsl:variable name="workshop-files" as="document-node()" select="doc('workshop/xml/workshop.xml')"/>
    <xsl:variable name="preceding-exercise" as="xs:string?" select="$workshop-files//workshop/exercises[1]/exercise[@file eq $local-base-filename || '.html']/preceding-sibling::exercise[1]/@file"/>
    <xsl:variable name="following-exercise" as="xs:string?" select="$workshop-files//workshop/exercises[1]/exercise[@file eq $local-base-filename || '.html']/following-sibling::exercise[1]/@file"/>
    
    <xsl:if test="not(preceding-sibling::head)">
      <head>
        <xsl:comment>The head section was generated by the load-html.xslt stylesheet.</xsl:comment>
        <meta content="text/html;charset=utf-8" http-equiv="Content-Type"/>
        <title><xsl:value-of select="h1"/></title>
        <link rel="stylesheet" href="/declarative-amsterdam/css/workshop-saxonjs.css"/>
        <script src="/declarative-amsterdam/saxonjs/SaxonJS2.rt.js"></script>
        <script xsl:expand-text="no">
          window.onload = function () {
          SaxonJS.transform({
          stylesheetLocation: "/declarative-amsterdam/xslt/<xsl:value-of select="$local-base-filename"/>.sef.json"
          },
          "async");
          }</script>
      </head>
    </xsl:if>
    <xsl:copy>
      <xsl:apply-templates select="@* | node()" mode="html"/>
      <xsl:variable name="webapp-dir-uri" as="xs:anyURI" select="file:path-to-uri($config:webapp-dir)"/>
      <xsl:variable name="html-path" as="xs:anyURI" select="resolve-uri($webapp-dir-uri || '/xsl/workshop/html/' ||$local-base-filename || '.html')"/>
      <xsl:variable name="xslt-path" as="xs:anyURI" select="resolve-uri($webapp-dir-uri || '/xsl/workshop/xslt/' ||$local-base-filename || '.xslt')"/>
      
      <div class="footer">
        <p>You will find the SaxonJS-stylesheet here:<br/><br/>
          <b>{file:path-to-native($xslt-path)}</b> (<a target="_blank" href="/declarative-amsterdam/xslt/{$local-base-filename}.xslt">view in browser)</a><br/><br/>
          The HTML template (source) is here:<br/><br/>
          <b>{file:path-to-native($html-path)}</b><br/><br/>
          Open these files in your editor to view or modify them.</p>
        <p style=" display: flex;justify-content: space-between;">
          <xsl:choose>
            <xsl:when test="$preceding-exercise"><a href="{$preceding-exercise}">Back</a></xsl:when>
            <xsl:otherwise><span/></xsl:otherwise>
          </xsl:choose>
          <a href="/declarative-amsterdam">Index</a>
          <xsl:choose>
            <xsl:when test="$following-exercise"><a href="{$following-exercise}">Next</a></xsl:when>
            <xsl:otherwise><span/></xsl:otherwise>
          </xsl:choose>
        </p>
      </div>
    </xsl:copy>
  </xsl:template>
  
  <xsl:template match="a[@class eq 'solution']" mode="html">
    <xsl:variable name="webapp-dir-uri" as="xs:anyURI" select="file:path-to-uri($config:webapp-dir)"/>
    <xsl:variable name="solution-path" as="xs:anyURI" select="resolve-uri($webapp-dir-uri || '/xsl/workshop/xslt/' || string(.))"/>
    <b><xsl:value-of select="file:path-to-native($solution-path)"/></b>
    <xsl:text>&#32;</xsl:text>
    <xsl:copy>
      <xsl:apply-templates select="@* except @href" mode="html"/>
      <xsl:attribute name="href" select="'/declarative-amsterdam/xslt/' || @href"/>
      <xsl:attribute name="target" select="'_blank'"/>
      <xsl:text>(view in browser)</xsl:text>
    </xsl:copy>
  </xsl:template>
  
</xsl:stylesheet>